name: CI/CD â€” Build, Push & Deploy

on:
  push:
    branches: [ "test" ]
    paths-ignore:
          - 'README.md'
          - '.gitignore'
          - '.gitattributes'

permissions:
  id-token: write
  contents: read

env:
  IMAGE_TAG: ${{ github.sha }}

jobs:
  build-infra:
    runs-on: ubuntu-latest
    outputs:
      server-ip: ${{steps.tf.outputs.SERVER_IP}}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Configure AWS credentials via OIDC (Terraform)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::075091538636:role/github-node-oicd # Change this to your role ARN
          aws-region: us-east-1

      - name: Deploy EC2 Instance
        working-directory: ./terraform
        env:
          TF_VAR_ssh_public_key: ${{ secrets.SSH_PUBLIC_KEY }}
        run: |
          terraform init
          terraform plan -out=tfplan
          terraform apply -auto-approve tfplan

      - name: Get server IP
        id: tf
        working-directory: ./terraform
        run: echo "SERVER_IP=$(terraform output -raw server_ip)" >> $GITHUB_OUTPUT

  build-and-push:
    runs-on: ubuntu-latest
    needs: build-infra
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.IMAGE_NAME }}:latest
            ${{ secrets.IMAGE_NAME }}:${{ env.IMAGE_TAG }}

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
  
  cleanup:
    runs-on: ubuntu-latest
    needs: [build-infra, build-and-push, deploy]
    if: failure()  # only runs if any of jobs fail
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Configure AWS credentials via OIDC (Terraform)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::075091538636:role/github-node-oicd
          aws-region: us-east-1

      - name: Destroy resources
        working-directory: ./terraform
        env:
          TF_VAR_ssh_public_key: ${{ secrets.SSH_PUBLIC_KEY }}
        run: |
          terraform init
          terraform destroy -auto-approve